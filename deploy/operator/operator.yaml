# Namespace for the operator
apiVersion: v1
kind: Namespace
metadata:
  name: chronik-operator-system
---
# Service account for the operator
apiVersion: v1
kind: ServiceAccount
metadata:
  name: chronik-operator
  namespace: chronik-operator-system
---
# ClusterRole for the operator
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: chronik-operator
rules:
  # ChronikCluster resources
  - apiGroups: ["chronik.stream"]
    resources: ["chronikclusters"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  - apiGroups: ["chronik.stream"]
    resources: ["chronikclusters/status"]
    verbs: ["get", "update", "patch"]
  - apiGroups: ["chronik.stream"]
    resources: ["chronikclusters/finalizers"]
    verbs: ["update"]
    
  # Core resources
  - apiGroups: [""]
    resources: ["configmaps", "secrets", "services", "serviceaccounts", "persistentvolumeclaims"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["create", "patch"]
    
  # Apps resources
  - apiGroups: ["apps"]
    resources: ["deployments", "statefulsets"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
    
  # RBAC resources
  - apiGroups: ["rbac.authorization.k8s.io"]
    resources: ["roles", "rolebindings"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
    
  # Policy resources
  - apiGroups: ["policy"]
    resources: ["poddisruptionbudgets"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
    
  # Autoscaling resources
  - apiGroups: ["autoscaling"]
    resources: ["horizontalpodautoscalers"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
    
  # CRD management
  - apiGroups: ["apiextensions.k8s.io"]
    resources: ["customresourcedefinitions"]
    verbs: ["get", "list", "watch", "create", "update", "patch"]
---
# ClusterRoleBinding for the operator
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: chronik-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: chronik-operator
subjects:
  - kind: ServiceAccount
    name: chronik-operator
    namespace: chronik-operator-system
---
# Operator deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: chronik-operator
  namespace: chronik-operator-system
  labels:
    app.kubernetes.io/name: chronik-operator
    app.kubernetes.io/component: operator
    app.kubernetes.io/part-of: chronik-stream
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: chronik-operator
      app.kubernetes.io/component: operator
  template:
    metadata:
      labels:
        app.kubernetes.io/name: chronik-operator
        app.kubernetes.io/component: operator
        app.kubernetes.io/part-of: chronik-stream
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
    spec:
      serviceAccountName: chronik-operator
      containers:
        - name: operator
          image: chronik/operator:latest
          imagePullPolicy: IfNotPresent
          env:
            - name: RUST_LOG
              value: "info,chronik_operator=debug"
            - name: OPERATOR_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          ports:
            - containerPort: 8080
              name: metrics
              protocol: TCP
            - containerPort: 8081
              name: health
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              port: health
            initialDelaySeconds: 15
            periodSeconds: 20
          readinessProbe:
            httpGet:
              path: /readyz
              port: health
            initialDelaySeconds: 5
            periodSeconds: 10
          resources:
            requests:
              cpu: 100m
              memory: 128Mi
            limits:
              cpu: 500m
              memory: 512Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 65534
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      terminationGracePeriodSeconds: 10