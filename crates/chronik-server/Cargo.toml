[package]
name = "chronik-server"
version.workspace = true
edition.workspace = true
authors.workspace = true
license.workspace = true
repository.workspace = true
description = "Unified Chronik Stream server - Kafka-compatible streaming platform"

[[bin]]
name = "chronik-server"
path = "src/main.rs"

[dependencies]
# Core Chronik dependencies
chronik-common = { path = "../chronik-common" }
chronik-protocol = { path = "../chronik-protocol" }
chronik-storage = { path = "../chronik-storage" }
chronik-wal = { path = "../chronik-wal" }
# chronik-ingest removed - code moved directly into chronik-server
chronik-monitoring = { path = "../chronik-monitoring" }
chronik-auth = { path = "../chronik-auth" }

# Optional components (feature-gated)
chronik-search = { path = "../chronik-search", optional = true }
chronik-query = { path = "../chronik-query", optional = true }
chronik-backup = { path = "../chronik-backup", optional = true }
chronik-config = { path = "../chronik-config", optional = true }

# Core dependencies
tokio = { workspace = true }
tokio-util = { workspace = true }
bytes = { workspace = true }
anyhow = { workspace = true }
thiserror = { workspace = true }

# CLI
clap = { workspace = true }

# Logging
tracing = { workspace = true }
tracing-subscriber = { workspace = true }

# Serialization
serde = { workspace = true }
serde_json = { workspace = true }
byteorder = { workspace = true }
base64 = "0.22"

# Utils
uuid = { workspace = true }
chrono = { workspace = true }
futures = { workspace = true }
async-trait = { workspace = true }
dashmap = { workspace = true }
parking_lot = { workspace = true }
murmur2 = { workspace = true }

# Socket configuration
socket2 = "0.5"

# Force vendored OpenSSL for musl builds
openssl = { workspace = true }

# Metrics handled by chronik-monitoring dependency


[features]
default = ["search", "backup"]
search = ["dep:chronik-search", "dep:chronik-query"]
backup = ["dep:chronik-backup"]
dynamic-config = ["dep:chronik-config"]
full = ["search", "backup", "dynamic-config"]

# Minimal build without optional features
minimal = []

[lints]
workspace = true
