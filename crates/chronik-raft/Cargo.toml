[package]
name = "chronik-raft"
version.workspace = true
edition.workspace = true
authors.workspace = true
license.workspace = true
repository.workspace = true

[dependencies]
# Chronik crates
chronik-common = { path = "../chronik-common" }
chronik-monitoring = { path = "../chronik-monitoring" }
chronik-raft-bridge = { path = "../chronik-raft-bridge" }  # Bridge for prost 0.11/0.13 compatibility
# Note: chronik-wal NOT included here to avoid circular dependency
# WalRaftStorage implementation lives in tests/integration or chronik-server

# Raft consensus (Apache 2.0)
# Using prost-codec (raft's internal prost 0.11)
raft = { version = "0.7", default-features = false, features = ["prost-codec"] }

# gRPC framework (tonic uses prost 0.13)
tonic = "0.12"
prost = "0.13"
prost-types = "0.13"

# Serialization
serde = { workspace = true }
serde_json = { workspace = true }
bincode = { workspace = true }
bytes = { workspace = true }

# Random number generation for election timeout randomization
rand = "0.8"

# Compression for snapshots
flate2 = { workspace = true }
crc32fast = { workspace = true }

# Async
tokio = { workspace = true }
tokio-stream = { workspace = true }
futures = { workspace = true }
async-trait = { workspace = true }

# Utils
uuid = { workspace = true }
chrono = { workspace = true }
parking_lot = { workspace = true }
dashmap = { workspace = true }

# Error handling
anyhow = { workspace = true }
thiserror = { workspace = true }

# Tracing
tracing = { workspace = true }

# Logging (for Raft integration)
slog = "2.7"
slog-stdlog = "4.1"
prometheus.workspace = true
lazy_static = "1.5.0"

[build-dependencies]
tonic-build = "0.12"

[dev-dependencies]
tempfile = { workspace = true }
tokio = { workspace = true }
criterion = { workspace = true }
