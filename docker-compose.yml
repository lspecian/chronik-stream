version: '3.8'

services:
  # TiKV Cluster
  pd0:
    image: pingcap/pd:latest
    ports:
      - "2379:2379"
    command:
      - --name=pd0
      - --data-dir=/data/pd0
      - --client-urls=http://0.0.0.0:2379
      - --peer-urls=http://0.0.0.0:2380
      - --advertise-client-urls=http://pd0:2379
      - --advertise-peer-urls=http://pd0:2380
      - --initial-cluster=pd0=http://pd0:2380
    volumes:
      - pd0_data:/data
    networks:
      - chronik

  tikv0:
    image: pingcap/tikv:latest
    ports:
      - "20160:20160"
    command:
      - --addr=0.0.0.0:20160
      - --advertise-addr=tikv0:20160
      - --data-dir=/data/tikv0
      - --pd=pd0:2379
    volumes:
      - tikv0_data:/data
    depends_on:
      - pd0
    networks:
      - chronik

  tikv1:
    image: pingcap/tikv:latest
    ports:
      - "20161:20160"
    command:
      - --addr=0.0.0.0:20160
      - --advertise-addr=tikv1:20160
      - --data-dir=/data/tikv1
      - --pd=pd0:2379
    volumes:
      - tikv1_data:/data
    depends_on:
      - pd0
    networks:
      - chronik

  tikv2:
    image: pingcap/tikv:latest
    ports:
      - "20162:20160"
    command:
      - --addr=0.0.0.0:20160
      - --advertise-addr=tikv2:20160
      - --data-dir=/data/tikv2
      - --pd=pd0:2379
    volumes:
      - tikv2_data:/data
    depends_on:
      - pd0
    networks:
      - chronik
  controller:
    build:
      context: .
      dockerfile: deploy/docker/controller.Dockerfile
    environment:
      TIKV_PD_ENDPOINTS: pd0:2379
      NODE_ID: 1
      RUST_LOG: info
    depends_on:
      - pd0
      - tikv0
      - tikv1
      - tikv2
    ports:
      - "9090:9090"
    networks:
      - chronik
    restart: unless-stopped

  ingest:
    build:
      context: .
      dockerfile: deploy/docker/ingest.Dockerfile
    environment:
      CONTROLLER_ADDR: controller:9090
      STORAGE_PATH: /home/chronik/data
      TIKV_PD_ENDPOINTS: pd0:2379
      RUST_LOG: debug,chronik_protocol=trace
    depends_on:
      - controller
      - pd0
    ports:
      - "9092:9092"
    volumes:
      - ingest_data:/home/chronik/data
    networks:
      - chronik
    restart: unless-stopped

  admin:
    build:
      context: .
      dockerfile: deploy/docker/admin.Dockerfile
    environment:
      CONTROLLER_ENDPOINTS: controller:9090
      TIKV_PD_ENDPOINTS: pd0:2379
      RUST_LOG: info
    depends_on:
      - controller
      - pd0
    ports:
      - "8080:8080"  # Admin API
      - "8081:8081"  # Metrics
    networks:
      - chronik
    restart: unless-stopped

  search:
    build:
      context: .
      dockerfile: Dockerfile.search
    environment:
      RUST_LOG: info
      INDEX_PATH: /data/index
    volumes:
      - search_index:/data/index
    depends_on:
      - controller
      - ingest
    ports:
      - "9200:9200"  # Elasticsearch-compatible API
    networks:
      - chronik
    restart: unless-stopped

  # Optional: Jaeger for tracing
  jaeger:
    image: jaegertracing/all-in-one:latest
    environment:
      COLLECTOR_OTLP_ENABLED: "true"
    ports:
      - "16686:16686"  # Jaeger UI
      - "4317:4317"    # OTLP gRPC
      - "4318:4318"    # OTLP HTTP
    networks:
      - chronik

  # Optional: Prometheus for metrics
  prometheus:
    image: prom/prometheus:latest
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    volumes:
      - ./deploy/docker/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    ports:
      - "9091:9090"
    networks:
      - chronik

  # Optional: Grafana for dashboards
  grafana:
    image: grafana/grafana:latest
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin
      GF_USERS_ALLOW_SIGN_UP: "false"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./deploy/docker/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./deploy/docker/grafana/datasources:/etc/grafana/provisioning/datasources
    ports:
      - "3001:3000"
    networks:
      - chronik
    depends_on:
      - prometheus

volumes:
  pd0_data:
  tikv0_data:
  tikv1_data:
  tikv2_data:
  ingest_data:
  search_index:
  prometheus_data:
  grafana_data:

networks:
  chronik:
    driver: bridge