version: '3.8'

services:
  # All-in-one Chronik Stream service
  chronik:
    image: ghcr.io/lspecian/chronik-stream:latest
    container_name: chronik
    ports:
      - "9092:9092"  # Kafka API
      - "3000:3000"  # Admin API
      - "9090:9090"  # Metrics
    environment:
      RUST_LOG: info
      CHRONIK_DATA_DIR: /data
    volumes:
      - chronik_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "chronik", "check"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 10s

  # Optional: Jaeger for tracing
  jaeger:
    image: jaegertracing/all-in-one:latest
    environment:
      COLLECTOR_OTLP_ENABLED: "true"
    ports:
      - "16686:16686"  # Jaeger UI
      - "4317:4317"    # OTLP gRPC
      - "4318:4318"    # OTLP HTTP

  # Optional: Prometheus for metrics
  prometheus:
    image: prom/prometheus:latest
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    volumes:
      - ./deploy/docker/prometheus-all-in-one.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    ports:
      - "9091:9090"

volumes:
  chronik_data:
  prometheus_data:

networks:
  default:
    name: chronik-network