#cloud-config
package_update: true
package_upgrade: true

packages:
  - apt-transport-https
  - ca-certificates
  - curl
  - gnupg
  - lsb-release
  - htop
  - net-tools

write_files:
  - path: /etc/systemd/system/chronik.service
    content: |
      [Unit]
      Description=Chronik Stream All-in-One
      After=docker.service
      Requires=docker.service
      
      [Service]
      Type=simple
      Restart=always
      RestartSec=10
      ExecStartPre=-/usr/bin/docker stop chronik
      ExecStartPre=-/usr/bin/docker rm chronik
      ExecStartPre=/usr/bin/docker pull ${chronik_image}:${chronik_version}
      ExecStart=/usr/bin/docker run \
        --name chronik \
        --rm \
        -p 9092:9092 \
        -p 3000:3000 \
        -p 9090:9090 \
        -v /data/chronik:/data \
        -e RUST_LOG=${rust_log} \
        -e STORAGE_BACKEND=${storage_backend} \
        %{ if storage_backend == "s3" ~}
        -e S3_BUCKET=${s3_bucket} \
        -e S3_REGION=${s3_region} \
        -e AWS_ACCESS_KEY_ID=${aws_access_key_id} \
        -e AWS_SECRET_ACCESS_KEY=${aws_secret_key} \
        %{ endif ~}
        ${chronik_image}:${chronik_version}
      
      [Install]
      WantedBy=multi-user.target

runcmd:
  # Install Docker
  - curl -fsSL https://download.docker.com/linux/debian/gpg | gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
  - echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/debian $(lsb_release -cs) stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null
  - apt-get update
  - apt-get install -y docker-ce docker-ce-cli containerd.io docker-compose-plugin
  
  # Create data directory
  - mkdir -p /data/chronik
  - chown -R 1000:1000 /data/chronik
  
  # Mount data volume if exists
  - |
    if [ -e /dev/disk/by-id/scsi-0HC_Volume_* ]; then
      DEVICE=$(ls /dev/disk/by-id/scsi-0HC_Volume_* | head -n1)
      if ! mount | grep -q "/data"; then
        mount $DEVICE /data
        echo "$DEVICE /data ext4 defaults,nofail,x-systemd.device-timeout=10 0 0" >> /etc/fstab
      fi
    fi
  
  # Enable and start Chronik
  - systemctl daemon-reload
  - systemctl enable chronik
  - systemctl start chronik
  
  # Install node exporter for monitoring
  - |
    docker run -d \
      --name node-exporter \
      --restart always \
      --net host \
      --pid host \
      -v /:/host:ro,rslave \
      prom/node-exporter:latest \
      --path.rootfs=/host

final_message: "Chronik Stream deployment complete! System will be ready in $UPTIME"