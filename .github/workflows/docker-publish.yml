name: Build and Publish Docker Images

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  pull_request:
    branches:
      - main
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    permissions:
      contents: read
      packages: write
      
    strategy:
      fail-fast: false
      max-parallel: 2
      matrix:
        include:
          - dockerfile: Dockerfile.all-in-one
            image-suffix: ""
            platforms: linux/amd64
          - dockerfile: deploy/docker/ingest.Dockerfile
            image-suffix: "-ingest"
            platforms: linux/amd64
          - dockerfile: deploy/docker/controller.Dockerfile
            image-suffix: "-controller"
            platforms: linux/amd64
          - dockerfile: Dockerfile.search
            image-suffix: "-search"
            platforms: linux/amd64
          - dockerfile: deploy/docker/admin.Dockerfile
            image-suffix: "-admin"
            platforms: linux/amd64

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}${{ matrix.image-suffix }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ${{ matrix.dockerfile }}
          platforms: ${{ matrix.platforms }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  build-helm-chart:
    runs-on: ubuntu-latest
    needs: build-and-push
    if: startsWith(github.ref, 'refs/tags/')
    permissions:
      contents: write
      packages: write
      
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Helm
        uses: azure/setup-helm@v3
        with:
          version: '3.13.0'

      - name: Package Helm chart
        run: |
          cd deploy/helm/chronik-stream
          helm package .
          
      - name: Upload Helm chart to GitHub Pages
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"
          
          # Create gh-pages branch if it doesn't exist
          git checkout gh-pages 2>/dev/null || git checkout -b gh-pages
          
          # Copy chart package
          cp deploy/helm/chronik-stream/*.tgz .
          
          # Update Helm repo index
          helm repo index . --url https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}
          
          # Commit and push
          git add *.tgz index.yaml
          git commit -m "Update Helm chart for ${{ github.ref_name }}"
          git push origin gh-pages

  update-readme:
    runs-on: ubuntu-latest
    needs: build-and-push
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    permissions:
      contents: write
      
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Update README with Docker pull commands
        run: |
          cat > docker-pull-commands.md << EOF
          ## Docker Images
          
          Pull the latest images from GitHub Container Registry:
          
          \`\`\`bash
          # All-in-one image (recommended for quick start)
          docker pull ghcr.io/${{ github.repository }}:latest
          
          # Individual service images
          docker pull ghcr.io/${{ github.repository }}-ingest:latest
          docker pull ghcr.io/${{ github.repository }}-controller:latest
          docker pull ghcr.io/${{ github.repository }}-search:latest
          docker pull ghcr.io/${{ github.repository }}-query:latest
          \`\`\`
          
          Run the all-in-one container:
          
          \`\`\`bash
          docker run -d \\
            --name chronik \\
            -p 9092:9092 \\
            -p 3000:3000 \\
            -v chronik-data:/data \\
            ghcr.io/${{ github.repository }}:latest
          \`\`\`
          EOF
          
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v5
        with:
          commit-message: Update Docker pull commands
          title: 'docs: Update Docker pull commands'
          body: |
            This PR updates the Docker pull commands in the documentation to use GitHub Container Registry.
            
            - Updates pull commands to use ghcr.io
            - Adds example run command for all-in-one container
          branch: update-docker-docs
          delete-branch: true